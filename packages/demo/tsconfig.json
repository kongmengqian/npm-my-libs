{
  "compilerOptions": {
    "declaration": true, // 生成相应的 .d.ts文件。
    "declarationDir": "./types", // 生成声明文件的输出路径。
    "baseUrl": "./",
    "paths": {
      "@/*": ["src/*"]
    },
    "allowSyntheticDefaultImports": true, // 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。
    "experimentalDecorators": true, // 启用实验性的ES装饰器。
    "module": "ES6",
    "target": "ES6",
    "skipLibCheck": true, // 忽略所有的声明文件（ *.d.ts）的类型检查。
    "esModuleInterop": true, // 通过导入内容创建命名空间，实现CommonJS和ES模块之间的互操作性
    "moduleResolution": "node", // 决定如何处理模块。或者是"Node"对于Node.js/io.js，或者是"Classic"（默认）。
    "strict": true, // 启用所有严格类型检查选项。
    "removeComments": false, // 删除所有注释，除了以 /!*开头的版权信息。
    "jsx": "react", // 在 .tsx文件里支持JSX： "React"或 "Preserve"。
    "sourceMap": true, // 生成相应的 .map文件。
    "downlevelIteration": true // 当target为"ES5"或"ES3"时，为"for-of" "spread"和"destructuring"中的迭代器提供完全支持
  },
  "exclude": ["node_modules", "build", "scripts", "**/*.css"] // 表示要排除的，不编译的文件
}
